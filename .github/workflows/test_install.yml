name: Test Installation

on:
  workflow_run:
    workflows: ["Release packages"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to test (e.g., 0.1.0). Leave empty to test latest release."
        required: false
        default: ""

jobs:
  test_install:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: git-repo-name-repo

      - name: Determine release tag
        id: release-tag
        shell: bash
        run: |
          set -euo pipefail

          # If tag is provided via manual trigger, use that, otherwise fetch latest
          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            RELEASE_TAG="${{ github.event.inputs.tag }}"
          else
            RELEASE_TAG=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name)
          fi
          echo "tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT

      - name: Install Homebrew (Linux AMD64)
        if: matrix.os == 'ubuntu-latest'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH

      - name: Install via Homebrew (MacOS and Linux AMD64)
        if: matrix.os != 'ubuntu-24.04-arm'
        run: |
          brew tap petrgazarov/git-repo-name
          brew install git-repo-name

      - name: Install binary and shell script directly (Linux ARM)
        if: matrix.os == 'ubuntu-24.04-arm'
        run: |
          TAG="${{ steps.release-tag.outputs.tag }}"
          curl -L "https://github.com/${{ github.repository }}/releases/download/${TAG}/git-repo-name-${TAG}-aarch64-unknown-linux-gnu" -o git-repo-name-bin
          chmod +x git-repo-name-bin
          sudo mv git-repo-name-bin /usr/local/bin/
          curl -L "https://github.com/${{ github.repository }}/releases/download/${TAG}/git-repo-name.sh" -o git-repo-name
          chmod +x git-repo-name
          sudo mv git-repo-name /usr/local/bin/

      - name: Verify basic functionality
        shell: bash
        run: |
          # Create a test git repository
          mkdir -p test-repo && cd test-repo
          git init
          git remote add origin git@github.com:petrgazarov/git-repo-name.git

          # Configure GitHub token
          git-repo-name config github-token ${{ secrets.GIT_REPO_NAME_METADATA_GITHUB_TOKEN }}

          # Run git-repo-name to see if it works
          git-repo-name --help
          git-repo-name fetch
